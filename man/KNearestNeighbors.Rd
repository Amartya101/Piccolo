% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PiccoloV3.R
\name{KNearestNeighbors}
\alias{KNearestNeighbors}
\title{Find k nearest neighbors}
\usage{
KNearestNeighbors(
  PiccoloList,
  k = 10,
  query = NULL,
  sort = TRUE,
  search = "kdtree",
  bucketSize = 10,
  splitRule = "suggest",
  approx = 0
)
}
\arguments{
\item{PiccoloList}{A list object. Piccolo list object obtained after applying the \link[Piccolo]{Normalize} function and the \link[Piccolo]{ComputePC} function.}

\item{k}{An integer variable. Specifies the number of nearest neighbours we wish to shortlist for every cell. Default is 10.}

\item{query}{A data matrix with the points to query. If query is not specified, the NN for all the points in x is returned. If query is specified then x needs to be a data matrix.}

\item{sort}{Sort the neighbors by distance. Note that some search methods already sort the results. Sorting is expensive and sort = FALSE may be much faster for some search methods. kNN objects can be sorted using sort().}

\item{search}{Nearest neighbor search strategy (one of "kdtree", "linear" or "dist").}

\item{bucketSize}{Maximum size of the kd-tree leafs.}

\item{splitRule}{rule to split the kd-tree. One of "STD", "MIDPT", "FAIR", "SL_MIDPT", "SL_FAIR" or "SUGGEST" (SL stands for sliding). "SUGGEST" uses ANNs best guess.}

\item{approx}{use approximate nearest neighbors. All NN up to a distance of a factor of 1 + approx eps may be used. Some actual NN may be omitted leading to spurious clusters and noise points. However, the algorithm will enjoy a significant speedup.}
}
\value{
An updated PiccoloList containing nn object of class kNN (subclass of NN) containing a list with the following components: dist(a matrix of distances), id (a matrix with ids), k (number of nearest neighbors used).
}
\description{
This function finds the k nearest neighbors for every cell based on the coordinates in the PC space.
}
\examples{
\dontrun{
pbmc3k <- KNearestNeighbors(PiccoloList = pbmc3k)
pbmc3k <- KNearestNeighbors(PiccoloList = pbmc3k, k = 15,
Out = F)
}
}
